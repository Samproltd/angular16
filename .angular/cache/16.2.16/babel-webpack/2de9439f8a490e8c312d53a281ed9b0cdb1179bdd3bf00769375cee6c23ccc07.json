{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/question.service\";\nimport * as i4 from \"src/app/services/quiz.service\";\nimport * as i5 from \"src/app/services/login.service\";\nimport * as i6 from \"src/app/services/result.service\";\nfunction StartComponent_div_0_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h1\", 13)(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.questions[0] == null ? null : ctx_r2.questions[0].quiz == null ? null : ctx_r2.questions[0].quiz.title);\n  }\n}\nfunction StartComponent_div_0_mat_card_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 14)(1, \"mat-card-content\")(2, \"p\")(3, \"b\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"span\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"mat-divider\")(7, \"br\");\n    i0.ɵɵelementStart(8, \"div\", 16)(9, \"div\", 17)(10, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function StartComponent_div_0_mat_card_7_Template_input_ngModelChange_10_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const q_r4 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(q_r4.givenAnswer = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 17)(13, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function StartComponent_div_0_mat_card_7_Template_input_ngModelChange_13_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const q_r4 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(q_r4.givenAnswer = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 16)(16, \"div\", 17)(17, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function StartComponent_div_0_mat_card_7_Template_input_ngModelChange_17_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const q_r4 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(q_r4.givenAnswer = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 17)(20, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function StartComponent_div_0_mat_card_7_Template_input_ngModelChange_20_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const q_r4 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(q_r4.givenAnswer = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const q_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Q \", i_r5 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", q_r4.content, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"value\", q_r4.option1)(\"name\", i_r5)(\"ngModel\", q_r4.givenAnswer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", q_r4.option1, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", q_r4.option2)(\"name\", i_r5)(\"ngModel\", q_r4.givenAnswer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", q_r4.option2, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", q_r4.option3)(\"name\", i_r5)(\"ngModel\", q_r4.givenAnswer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", q_r4.option3, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", q_r4.option4)(\"name\", i_r5)(\"ngModel\", q_r4.givenAnswer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", q_r4.option4, \" \");\n  }\n}\nfunction StartComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4);\n    i0.ɵɵelement(4, \"h3\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 5);\n    i0.ɵɵtemplate(6, StartComponent_div_0_ng_container_6_Template, 4, 1, \"ng-container\", 6);\n    i0.ɵɵtemplate(7, StartComponent_div_0_mat_card_7_Template, 22, 18, \"mat-card\", 7);\n    i0.ɵɵelementStart(8, \"div\", 8)(9, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function StartComponent_div_0_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.submitQuiz());\n    });\n    i0.ɵɵtext(10, \" Submit Exam \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"div\", 4)(12, \"mat-card\", 10)(13, \"mat-card-header\")(14, \"mat-card-title\");\n    i0.ɵɵtext(15, \" Progress \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"mat-card-subtitle\");\n    i0.ɵɵtext(17, \" Exam will automatically submitted when timer reaches to \");\n    i0.ɵɵelementStart(18, \"b\");\n    i0.ɵɵtext(19, \"0:0\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"mat-card-content\")(21, \"h1\", 11);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"mat-spinner\", 12);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.questions == null ? null : ctx_r0.questions.length) > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.questions);\n    i0.ɵɵadvance(15);\n    i0.ɵɵtextInterpolate(ctx_r0.getFormattedTime());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r0.timer / (((ctx_r0.questions == null ? null : ctx_r0.questions.length) || 1) * 2 * 60) * 100);\n  }\n}\nfunction StartComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 16)(2, \"div\", 19)(3, \"mat-card\")(4, \"mat-card-header\", 11)(5, \"mat-card-title\", 11);\n    i0.ɵɵtext(6, \"Exam Result\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"mat-card-content\", 11)(8, \"h1\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"h1\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"h1\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"mat-card-actions\", 11)(16, \"button\", 20);\n    i0.ɵɵtext(17, \" Home \");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\"Marks obtained: \", i0.ɵɵpipeBind2(10, 4, ctx_r1.marksGot, \"1.0-0\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Correct Answers : \", ctx_r1.correctAnswers, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Questions Attempted :\", ctx_r1.attempted, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", \"/user-dashboard/0\");\n  }\n}\nexport let StartComponent = /*#__PURE__*/(() => {\n  class StartComponent {\n    constructor(locationSt, _route, _question, _quiz, login, resultService) {\n      this.locationSt = locationSt;\n      this._route = _route;\n      this._question = _question;\n      this._quiz = _quiz;\n      this.login = login;\n      this.resultService = resultService;\n      this.result = {\n        id: 0,\n        marksGot: 0,\n        correctAnswers: 0,\n        attempted: 0,\n        userid: 0,\n        firstName: '',\n        lastName: '',\n        examName: ''\n      };\n      this.email = {\n        name: '',\n        to: '',\n        subject: '',\n        examName: ''\n      };\n      this.questions = [];\n      this.marksGot = 0;\n      this.correctAnswers = 0;\n      this.attempted = 0;\n      this.isSubmit = false;\n      this.isLoggedIn = false;\n      this.user = null;\n    }\n    ngOnInit() {\n      this.isLoggedIn = this.login.isLoggedIn();\n      this.user = this.login.getUser();\n      this.login.loginStatusSubject.asObservable().subscribe(data => {\n        this.isLoggedIn = this.login.isLoggedIn();\n        this.user = this.login.getUser();\n      });\n      this.preventBackButton();\n      this.qid = this._route.snapshot.params.qid;\n      console.log(this.qid);\n      this.loadQuestions();\n    }\n    loadQuestions() {\n      this.questions = [];\n      this._question.getQuestionsOfQuizForTest(this.qid).subscribe(data => {\n        this.questions = data;\n        this.timer = this.questions.length * 1 * 60;\n        console.log(this.questions);\n        this.startTimer();\n      }, error => {\n        console.log(error);\n        Swal.fire('Error', 'Error in loading questions of Exam', 'error');\n      });\n    }\n    preventBackButton() {\n      history.pushState(null, null, location.href);\n      this.locationSt.onPopState(() => {\n        history.pushState(null, null, location.href);\n      });\n    }\n    submitQuiz() {\n      Swal.fire({\n        title: 'Do you want to submit the Exam?',\n        showCancelButton: true,\n        confirmButtonText: `Submit`,\n        icon: 'info'\n      }).then(e => {\n        if (e.isConfirmed) {\n          this.evalQuiz();\n        }\n      });\n    }\n    startTimer() {\n      let t = window.setInterval(() => {\n        //code\n        if (this.timer <= 0) {\n          this.evalQuiz();\n          clearInterval(t);\n        } else {\n          this.timer--;\n        }\n      }, 1000);\n    }\n    getFormattedTime() {\n      let mm = Math.floor(this.timer / 60);\n      let ss = this.timer - mm * 60;\n      return `${mm} min : ${ss} sec`;\n    }\n    evalQuiz() {\n      //calculation\n      //call to sever  to check questions\n      this._question.evalQuiz(this.questions).subscribe(data => {\n        console.log(data);\n        this.marksGot = data.marksGot;\n        this.correctAnswers = data.correctAnswers;\n        this.attempted = data.attempted;\n        this.isSubmit = true;\n      }, error => {\n        console.log(error);\n      });\n      this.isSubmit = true;\n      this.questions.forEach(q => {\n        if (q.givenAnswer == q.answer) {\n          this.correctAnswers++;\n          let marksSingle = this.questions[0].quiz.maxMarks / this.questions.length;\n          this.marksGot += marksSingle;\n        }\n        // if (q.givenAnswer.trim() != '') {\n        //   this.attempted++;\n        // }\n        if (q.givenAnswer && q.givenAnswer.trim() !== '') {\n          this.attempted++;\n        }\n      });\n      console.log('Correct Answers :' + this.correctAnswers);\n      console.log('Marks Got ' + this.marksGot);\n      console.log('attempted ' + this.attempted);\n      console.log(this.questions[0].quiz.title);\n      this.result.marksGot = this.marksGot;\n      this.result.attempted = this.attempted;\n      this.result.correctAnswers = this.correctAnswers;\n      this.result.firstName = this.user.firstName;\n      this.result.lastName = this.user.lastName;\n      this.result.userid = this.user.id;\n      this.result.examName = this.questions[0].quiz.title;\n      //\n      this.email.to = this.user.username;\n      this.email.name = this.user.firstName + ' ' + this.user.lastName;\n      this.email.subject = 'Welcome...! ' + this.user.firstName + ' ' + this.user.lastName;\n      this.email.examName = this.questions[0].quiz.title;\n      console.log(\"************************\");\n      console.log(this.questions[0].quiz.title);\n      console.log(\"************************\");\n      this.AddResult();\n      this.sendEmailResult();\n    }\n    // add result\n    AddResult() {\n      this.resultService.addResult(this.result).subscribe(data => {});\n      console.log('Result Added Successfully....!');\n    }\n    sendEmailResult() {\n      this.resultService.sendEmailResult(this.email).subscribe(data => {});\n      console.log('Email Sending Scessfully....!');\n    }\n    static {\n      this.ɵfac = function StartComponent_Factory(t) {\n        return new (t || StartComponent)(i0.ɵɵdirectiveInject(i1.LocationStrategy), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.QuestionService), i0.ɵɵdirectiveInject(i4.QuizService), i0.ɵɵdirectiveInject(i5.LoginService), i0.ɵɵdirectiveInject(i6.ResultService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: StartComponent,\n        selectors: [[\"app-start\"]],\n        decls: 2,\n        vars: 2,\n        consts: [[\"class\", \"bootstrap-wrapper\", 4, \"ngIf\"], [1, \"bootstrap-wrapper\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-8\"], [4, \"ngIf\"], [\"class\", \"mt10\", 4, \"ngFor\", \"ngForOf\"], [1, \"container\", \"text-center\", \"mt20\", \"mb20\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [2, \"margin-top\", \"70px\"], [1, \"text-center\"], [\"mode\", \"determinate\", \"color\", \"primary\", 2, \"margin\", \"auto\", 3, \"value\"], [1, \"mt20\"], [1, \"mt10\"], [1, \"ml10\", 3, \"innerHTML\"], [1, \"row\", \"mt20\"], [1, \"col-md-6\"], [\"type\", \"radio\", 3, \"value\", \"name\", \"ngModel\", \"ngModelChange\"], [1, \"col-md-6\", \"offset-md-3\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"routerLink\"]],\n        template: function StartComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, StartComponent_div_0_Template, 24, 4, \"div\", 0);\n            i0.ɵɵtemplate(1, StartComponent_div_1_Template, 18, 7, \"div\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", !ctx.isSubmit);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isSubmit);\n          }\n        }\n      });\n    }\n  }\n  return StartComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}