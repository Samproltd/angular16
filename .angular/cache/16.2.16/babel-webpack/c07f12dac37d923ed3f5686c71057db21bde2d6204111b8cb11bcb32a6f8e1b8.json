{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/legacy-snack-bar\";\nimport * as i2 from \"src/app/services/login.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/legacy-button\";\nimport * as i5 from \"@angular/material/legacy-form-field\";\nimport * as i6 from \"@angular/material/legacy-input\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/legacy-card\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(snack, login, router) {\n      this.snack = snack;\n      this.login = login;\n      this.router = router;\n      this.loginData = {\n        username: '',\n        password: ''\n      };\n    }\n    ngOnInit() {}\n    formSubmit() {\n      console.log('login btn clicked');\n      if (this.loginData.username.trim() == '' || this.loginData.username == null) {\n        this.snack.open('Username is required !! ', '', {\n          duration: 3000\n        });\n        return;\n      }\n      if (this.loginData.password.trim() == '' || this.loginData.password == null) {\n        this.snack.open('Password is required !! ', '', {\n          duration: 3000\n        });\n        return;\n      }\n      //request to server to generate token\n      this.login.generateToken(this.loginData).subscribe(data => {\n        console.log('success');\n        console.log(data);\n        //login...\n        this.login.loginUser(data.token);\n        this.login.getCurrentUser().subscribe(user => {\n          this.login.setUser(user);\n          console.log(user);\n          //redirect ...ADMIN: admin-dashboard\n          //redirect ...NORMAL:normal-dashboard\n          if (this.login.getUserRole() == 'ADMIN') {\n            //admin dashboard\n            // window.location.href = '/admin';\n            this.router.navigate(['admin']);\n            this.login.loginStatusSubject.next(true);\n          } else if (this.login.getUserRole() == 'NORMAL') {\n            //normal user dashbaord\n            // window.location.href = '/user-dashboard';\n            this.router.navigate(['user-dashboard/0']);\n            this.login.loginStatusSubject.next(true);\n          } else {\n            this.login.logout();\n          }\n        });\n      }, error => {\n        console.log('Error !');\n        console.log(error);\n        this.snack.open('Invalid Details !! Try again', '', {\n          duration: 3000\n        });\n      });\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.MatLegacySnackBar), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 25,\n        vars: 2,\n        consts: [[1, \"bootstrap-wrapper\"], [1, \"navbar\", \"navbar-expand-lg\", 2, \"background-color\", \"rgb(35, 189, 240)\"], [1, \"container-fluid\"], [\"href\", \"#\", 1, \"navbar-brand\", \"mx-auto\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-6\", \"offset-md-3\"], [1, \"container\", \"text-center\"], [1, \"text-center\"], [1, \"btn\", \"btn-danger\"], [3, \"ngSubmit\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"name\", \"username\", \"required\", \"\", \"matInput\", \"\", \"placeholder\", \"Enter here\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"password\", \"type\", \"password\", \"required\", \"\", \"matInput\", \"\", \"placeholder\", \"Enter here\", 3, \"ngModel\", \"ngModelChange\"], [1, \"container\", \"text-center\", 2, \"margin-right\", \"50px\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"nav\", 1)(2, \"div\", 2);\n            i0.ɵɵelement(3, \"a\", 3);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"mat-card\");\n            i0.ɵɵelement(8, \"div\", 7);\n            i0.ɵɵelementStart(9, \"h1\", 8);\n            i0.ɵɵtext(10, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"button\", 9);\n            i0.ɵɵtext(12, \"normal\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"form\", 10);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_13_listener() {\n              return ctx.formSubmit();\n            });\n            i0.ɵɵelementStart(14, \"mat-form-field\", 11)(15, \"mat-label\");\n            i0.ɵɵtext(16, \"User Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"input\", 12);\n            i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_17_listener($event) {\n              return ctx.loginData.username = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(18, \"mat-form-field\", 11)(19, \"mat-label\");\n            i0.ɵɵtext(20, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(21, \"input\", 13);\n            i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_21_listener($event) {\n              return ctx.loginData.password = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(22, \"div\", 14)(23, \"button\", 15);\n            i0.ɵɵtext(24, \" Login \");\n            i0.ɵɵelementEnd()()()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(17);\n            i0.ɵɵproperty(\"ngModel\", ctx.loginData.username);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.loginData.password);\n          }\n        },\n        dependencies: [i4.MatLegacyButton, i5.MatLegacyFormField, i5.MatLegacyLabel, i6.MatLegacyInput, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.NgModel, i7.NgForm, i8.MatLegacyCard],\n        styles: [\".full-width[_ngcontent-%COMP%]{width:100%}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}