{"ast":null,"code":"import { Subject } from 'rxjs';\nimport baseUrl from './helper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(http) {\n      this.http = http;\n      this.loginStatusSubject = new Subject();\n    }\n    // Get the current logged-in user\n    getCurrentUser() {\n      return this.http.get(`${baseUrl}/current-user`);\n    }\n    // Generate JWT token\n    generateToken(loginData) {\n      return this.http.post(`${baseUrl}/generate-token`, loginData);\n    }\n    // Login user: Set token in localStorage\n    loginUser(token) {\n      if (token) {\n        localStorage.setItem('token', token);\n        return true;\n      }\n      return false;\n    }\n    // Check if the user is logged in\n    isLoggedIn() {\n      const token = localStorage.getItem('token');\n      return token !== null && token !== '' && token !== undefined;\n    }\n    // Logout: Remove token and user details from localStorage\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      this.loginStatusSubject.next(false); // Notify other components\n    }\n    // Retrieve the JWT token\n    getToken() {\n      return localStorage.getItem('token');\n    }\n    // Set user details in localStorage\n    setUser(user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n    // Get user details from localStorage\n    getUser() {\n      const userStr = localStorage.getItem('user');\n      if (userStr) {\n        return JSON.parse(userStr);\n      }\n      return null;\n    }\n    // Get user role from stored user data\n    getUserRole() {\n      const user = this.getUser();\n      return user && user.authorities && user.authorities.length > 0 ? user.authorities[0].authority : null;\n    }\n    static {\n      this.ɵfac = function LoginService_Factory(t) {\n        return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: LoginService,\n        factory: LoginService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}