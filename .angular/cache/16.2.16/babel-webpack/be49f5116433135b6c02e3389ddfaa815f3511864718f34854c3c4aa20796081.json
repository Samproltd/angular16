{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/quiz.service\";\nimport * as i3 from \"@angular/material/legacy-button\";\nimport * as i4 from \"@angular/material/legacy-card\";\nimport * as i5 from \"@angular/material/divider\";\nimport * as i6 from \"@angular/common\";\nexport let InstructionsComponent = /*#__PURE__*/(() => {\n  class InstructionsComponent {\n    constructor(_route, _quiz, _router) {\n      this._route = _route;\n      this._quiz = _quiz;\n      this._router = _router;\n      this.quiz = {};\n    }\n    ngOnInit() {\n      this.qid = this._route.snapshot.params.qid;\n      // console.log(this.qid);\n      this._quiz.getQuiz(this.qid).subscribe(data => {\n        // console.log(data);\n        this.quiz = data;\n      }, error => {\n        console.log(error);\n        alert('Error in loading quiz data');\n      });\n    }\n    startQuiz() {\n      Swal.fire({\n        title: 'Do you want to start the Exam?',\n        showCancelButton: true,\n        confirmButtonText: `Start`,\n        denyButtonText: `Don't save`,\n        icon: 'info'\n      }).then(result => {\n        /* Read more about isConfirmed, isDenied below */\n        if (result.isConfirmed) {\n          this._router.navigate(['/start/' + this.qid]);\n        } else if (result.isDenied) {\n          Swal.fire('Changes are not saved', '', 'info');\n        }\n      });\n    }\n    static {\n      this.ɵfac = function InstructionsComponent_Factory(t) {\n        return new (t || InstructionsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.QuizService), i0.ɵɵdirectiveInject(i1.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: InstructionsComponent,\n        selectors: [[\"app-instructions\"]],\n        decls: 57,\n        vars: 8,\n        consts: [[1, \"bootstrap-wrapper\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"mt20\"], [2, \"color\", \"rgb(116, 109, 180)\"], [1, \"ml20\"], [1, \"text-center\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"\", 3, \"click\"]],\n        template: function InstructionsComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"mat-card\", 4)(5, \"mat-card-header\")(6, \"mat-card-title\");\n            i0.ɵɵelement(7, \"b\", 5);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(8, \"mat-card-content\", 6)(9, \"h1\");\n            i0.ɵɵtext(10);\n            i0.ɵɵpipe(11, \"titlecase\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"p\");\n            i0.ɵɵtext(13);\n            i0.ɵɵpipe(14, \"titlecase\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(15, \"mat-divider\")(16, \"br\");\n            i0.ɵɵelementStart(17, \"h1\");\n            i0.ɵɵtext(18, \"Important Instructions\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"ul\")(20, \"li\");\n            i0.ɵɵtext(21, \" You have to submit Exam with in \");\n            i0.ɵɵelementStart(22, \"b\");\n            i0.ɵɵtext(23);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(24, \"li\");\n            i0.ɵɵtext(25, \" There are \");\n            i0.ɵɵelementStart(26, \"b\");\n            i0.ɵɵtext(27);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(28, \" in this Exam. \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(29, \"li\");\n            i0.ɵɵtext(30, \" Each questions carries \");\n            i0.ɵɵelementStart(31, \"b\");\n            i0.ɵɵtext(32, \"1 marks\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(33, \". No negative marking for wrong ones. \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(34, \"li\");\n            i0.ɵɵtext(35, \"All questions is of MCQ Types.\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelement(36, \"mat-divider\")(37, \"br\");\n            i0.ɵɵelementStart(38, \"h1\");\n            i0.ɵɵtext(39, \"Attempting Exam\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(40, \"ul\")(41, \"li\");\n            i0.ɵɵtext(42, \"Click \");\n            i0.ɵɵelementStart(43, \"b\");\n            i0.ɵɵtext(44, \"Start Exam\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(45, \" button to start the exam\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(46, \"li\");\n            i0.ɵɵtext(47, \" The time will start the moment you click the Start Test button. \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(48, \"li\");\n            i0.ɵɵtext(49, \"All questions are complusory\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(50, \"li\");\n            i0.ɵɵtext(51, \"Scroll down to move to next question.\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(52, \"li\");\n            i0.ɵɵtext(53, \"Click on Submit Exam button on completion of the Exam.\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(54, \"mat-card-actions\", 7)(55, \"button\", 8);\n            i0.ɵɵlistener(\"click\", function InstructionsComponent_Template_button_click_55_listener() {\n              return ctx.startQuiz();\n            });\n            i0.ɵɵtext(56, \" Start Exam \");\n            i0.ɵɵelementEnd()()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(10);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 4, ctx.quiz.title));\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(14, 6, ctx.quiz.description));\n            i0.ɵɵadvance(10);\n            i0.ɵɵtextInterpolate1(\" \", ctx.quiz.numberOfQuestions * 1, \" Minutes.\");\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate1(\"\", ctx.quiz.numberOfQuestions, \" questions\");\n          }\n        },\n        dependencies: [i3.MatLegacyButton, i4.MatLegacyCard, i4.MatLegacyCardHeader, i4.MatLegacyCardContent, i4.MatLegacyCardTitle, i4.MatLegacyCardActions, i5.MatDivider, i6.TitleCasePipe]\n      });\n    }\n  }\n  return InstructionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}